generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id           String      @id @default(cuid())
  name         String      @unique
  abbreviation String      @unique
  city         String
  conference   String
  division     String
  logoUrl      String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  awayGames    Game[]      @relation("AwayTeam")
  homeGames    Game[]      @relation("HomeTeam")
  players      Player[]
  teamStats    TeamStats[]

  @@map("teams")
}

model Player {
  id           String        @id @default(cuid())
  name         String
  position     String
  height       Int?
  weight       Int?
  jerseyNumber Int?
  teamId       String?
  isActive     Boolean       @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  playerStats  PlayerStats[]
  team         Team?         @relation(fields: [teamId], references: [id])

  @@map("players")
}

model Game {
  id          String        @id @default(cuid())
  gameDate    DateTime
  season      String
  seasonType  String
  homeTeamId  String
  awayTeamId  String
  homeScore   Int?
  awayScore   Int?
  status      String
  attendance  Int?
  venue       String?
  // Betting odds fields
  whosFavored String?
  spread      Float?
  total       Float?
  moneylineHome Int?
  moneylineAway Int?
  h2Spread    Float?
  h2Total     Float?
  idSpread    Int?          // 1=favorite covered, 0=underdog, 2=push
  idTotal     Int?          // 1=over, 0=under, 2=push
  regular     Boolean?
  playoffs    Boolean?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  bettingOdds BettingOdds[]
  awayTeam    Team          @relation("AwayTeam", fields: [awayTeamId], references: [id])
  homeTeam    Team          @relation("HomeTeam", fields: [homeTeamId], references: [id])
  predictions Prediction[]
  userBets    UserBet[]

  @@map("games")
}

model BettingOdds {
  id         String   @id @default(cuid())
  gameId     String
  sportsbook String
  lineType   String
  homeLine   Float?
  awayLine   Float?
  homeOdds   Int?
  awayOdds   Int?
  totalLine  Float?
  overOdds   Int?
  underOdds  Int?
  timestamp  DateTime @default(now())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  game       Game     @relation(fields: [gameId], references: [id])

  @@map("betting_odds")
}

model Prediction {
  id             String    @id @default(cuid())
  gameId         String
  modelName      String
  modelVersion   String
  predictionType String
  predictedValue Float
  confidence     Float
  actualValue    Float?
  isCorrect      Boolean?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  game           Game      @relation(fields: [gameId], references: [id])
  userBets       UserBet[]

  @@map("predictions")
}

model UserBet {
  id           String      @id @default(cuid())
  gameId       String
  predictionId String?
  betType      String
  betAmount    Float
  odds         Int
  potentialWin Float
  actualWin    Float?
  status       String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  game         Game        @relation(fields: [gameId], references: [id])
  prediction   Prediction? @relation(fields: [predictionId], references: [id])

  @@map("user_bets")
}

model TeamStats {
  id            String   @id @default(cuid())
  teamId        String
  season        String
  gamesPlayed   Int      @default(0)
  wins          Int      @default(0)
  losses        Int      @default(0)
  pointsPerGame Float    @default(0)
  pointsAllowed Float    @default(0)
  fieldGoalPct  Float    @default(0)
  threePointPct Float    @default(0)
  freeThrowPct  Float    @default(0)
  rebounds      Float    @default(0)
  assists       Float    @default(0)
  turnovers     Float    @default(0)
  steals        Float    @default(0)
  blocks        Float    @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  team          Team     @relation(fields: [teamId], references: [id])

  @@unique([teamId, season])
  @@map("team_stats")
}

model PlayerStats {
  id             String   @id @default(cuid())
  playerId       String
  gameId         String?
  season         String
  gamesPlayed    Int      @default(0)
  minutesPerGame Float    @default(0)
  pointsPerGame  Float    @default(0)
  rebounds       Float    @default(0)
  assists        Float    @default(0)
  steals         Float    @default(0)
  blocks         Float    @default(0)
  turnovers      Float    @default(0)
  fieldGoalPct   Float    @default(0)
  threePointPct  Float    @default(0)
  freeThrowPct   Float    @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  seasonType     String
  player         Player   @relation(fields: [playerId], references: [id])

  @@unique([playerId, season, seasonType])
  @@map("player_stats")
}

model PlayerGameStats {
  id                    String   @id @default(cuid())
  personId              String   // Raw personId from CSV
  firstName             String
  lastName              String
  gameId                String
  gameDate              DateTime
  teamCity              String
  teamName              String
  opponentCity          String
  opponentName          String
  gameType              String
  win                   Boolean
  home                  Boolean
  minutesPlayed         Float    @default(0)
  points                Float    @default(0)
  assists               Float    @default(0)
  blocks                Float    @default(0)
  steals                Float    @default(0)
  fieldGoalsAttempted   Float    @default(0)
  fieldGoalsMade        Float    @default(0)
  fieldGoalsPercentage  Float    @default(0)
  threePointersAttempted Float   @default(0)
  threePointersMade     Float    @default(0)
  threePointersPercentage Float  @default(0)
  freeThrowsAttempted   Float    @default(0)
  freeThrowsMade        Float    @default(0)
  freeThrowsPercentage  Float    @default(0)
  reboundsDefensive     Float    @default(0)
  reboundsOffensive     Float    @default(0)
  reboundsTotal         Float    @default(0)
  foulsPersonal         Float    @default(0)
  turnovers             Float    @default(0)
  plusMinusPoints       Float    @default(0)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@unique([personId, gameId])
  @@map("player_game_stats")
}

model ModelPerformance {
  id                 String   @id @default(cuid())
  modelName          String
  modelVersion       String
  season             String
  totalPredictions   Int      @default(0)
  correctPredictions Int      @default(0)
  accuracy           Float    @default(0)
  roi                Float    @default(0)
  sharpeRatio        Float    @default(0)
  totalBets          Int      @default(0)
  winningBets        Int      @default(0)
  losingBets         Int      @default(0)
  pushedBets         Int      @default(0)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@unique([modelName, modelVersion, season])
  @@map("model_performance")
}
